buildscript {
    ext {
        jettyVersion = '9.2.10.v20150310'
        openDolphinVersion = '1.0-RC1'
        jbossLogginVersion = '1.0.1.Final'
        itextVersion = '2.1.7'
        log4jVersion = '1.2.17'
        rxtxVersion = '2.1.7'
        wimpiJamodVersion = '1.2'
        groovyVersion = '2.3.6'
        h2Version = '1.4.196'
        mockitoVersion = '1.10.19'
        powerMockVersion = '1.6.6'
        jUnitVersion = '4.12'
        cglibNodepVersion = '2.2.2'
        lombokVersion = '1.16.18'
        springBootVersion = '1.5.6.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}


apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'org.springframework.boot'

jar {
    baseName = 'eru'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url 'http://repo.maven.apache.org/maven2' }
    maven { url 'http://nexus.gluonhq.com/nexus/content/repositories/releases/' }
}

sourceSets {
    main {
        java { srcDirs = [] }
        groovy { srcDirs = ["src/main/java", "src/main/groovy"] }
    }
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter'
    compile "org.projectlombok:lombok:${lombokVersion}"
    compile "log4j:log4j:${log4jVersion}"
    compile "com.lowagie:itext:${itextVersion}"
    compile "org.open-dolphin:dolphin-client:${openDolphinVersion}"
    compile "org.open-dolphin:dolphin-client-javafx:${openDolphinVersion}"
    compile "org.open-dolphin:dolphin-shared:${openDolphinVersion}"
    compile "org.open-dolphin:dolphin-server:${openDolphinVersion}"
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile "com.h2database:h2:${h2Version}"
    compile "org.eclipse.jetty:jetty-servlets:${jettyVersion}"
    compile "org.eclipse.jetty:jetty-server:${jettyVersion}"
    compile "org.eclipse.jetty:jetty-servlet:${jettyVersion}"
    compile "org.eclipse.jetty:jetty-http:${jettyVersion}"
    compile "org.eclipse.jetty:jetty-continuation:${jettyVersion}"
    compile "org.eclipse.jetty:jetty-security:${jettyVersion}"
    compile "org.eclipse.jetty:jetty-webapp:${jettyVersion}"
    compile "org.eclipse.jetty:jetty-xml:${jettyVersion}"
    compile "org.eclipse.jetty:jetty-io:${jettyVersion}"
    compile "org.rxtx:rxtx:${rxtxVersion}"
    compile "net.wimpi:jamod:${wimpiJamodVersion}"
    compile "org.codehaus.groovy:groovy:${groovyVersion}"
    compile "cglib:cglib-nodep:${cglibNodepVersion}"
    compile 'com.gluonhq.scenebuilder:scenebuilder-all:8.2.0'

    //Testing
    testCompile "junit:junit:${jUnitVersion}"
    testCompile "org.powermock:powermock-api-mockito:${powerMockVersion}"
    testCompile "org.powermock:powermock-module-junit4:${powerMockVersion}"
    testCompile "org.mockito:mockito-core:${mockitoVersion}"
    testCompile 'org.springframework.boot:spring-boot-starter-test'
}